"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3914],{8412:(e,l,i)=>{i.r(l),i.d(l,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>s,toc:()=>d});var t=i(4848),r=i(8453);const n={},a="API",s={id:"ui/api",title:"API",description:"DataType",source:"@site/docs/ui/api.md",sourceDirName:"ui",slug:"/ui/api",permalink:"/en/docs/ui/api",draft:!1,unlisted:!1,editUrl:"https://github.com/XCharts-Team/XCharts/docs/ui/api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Extension UI Components",permalink:"/en/docs/ui"},next:{title:"Update Log",permalink:"/en/docs/ui/changelog"}},o={},d=[{value:"DataType",id:"datatype",level:2},{value:"FillStyle",id:"fillstyle",level:2},{value:"FillStyle.autoOffset",id:"fillstyleautooffset",level:3},{value:"FillStyle.background",id:"fillstylebackground",level:3},{value:"FillStyle.color",id:"fillstylecolor",level:3},{value:"FillStyle.height",id:"fillstyleheight",level:3},{value:"FillStyle.location",id:"fillstylelocation",level:3},{value:"FillStyle.radius",id:"fillstyleradius",level:3},{value:"FillStyle.roundCap",id:"fillstyleroundcap",level:3},{value:"FillStyle.show",id:"fillstyleshow",level:3},{value:"FillStyle.toColor",id:"fillstyletocolor",level:3},{value:"FillStyle.width",id:"fillstylewidth",level:3},{value:"ITableCell",id:"itablecell",level:2},{value:"ProgressContext",id:"progresscontext",level:2},{value:"SliderContext",id:"slidercontext",level:2},{value:"SliderHandleStyle",id:"sliderhandlestyle",level:2},{value:"SliderHandleStyle.gradientColor",id:"sliderhandlestylegradientcolor",level:3},{value:"SliderHandleStyle.show",id:"sliderhandlestyleshow",level:3},{value:"SliderHandleStyle.symbol",id:"sliderhandlestylesymbol",level:3},{value:"SliderMarkStyle",id:"slidermarkstyle",level:2},{value:"SliderMarkStyle.included",id:"slidermarkstyleincluded",level:3},{value:"SliderMarkStyle.label",id:"slidermarkstylelabel",level:3},{value:"SliderMarkStyle.show",id:"slidermarkstyleshow",level:3},{value:"SliderMarkStyle.symbol",id:"slidermarkstylesymbol",level:3},{value:"StatisticContext",id:"statisticcontext",level:2},{value:"StatisticHelper",id:"statistichelper",level:2},{value:"StatisticHelper.GetContentPosition",id:"statistichelpergetcontentposition",level:3},{value:"StatisticHelper.GetTitleContent",id:"statistichelpergettitlecontent",level:3},{value:"StatisticHelper.GetValueContent",id:"statistichelpergetvaluecontent",level:3},{value:"TableCarouselContext",id:"tablecarouselcontext",level:2},{value:"TableCarouselMode",id:"tablecarouselmode",level:2},{value:"TableCarouselStyle",id:"tablecarouselstyle",level:2},{value:"TableCarouselType",id:"tablecarouseltype",level:2},{value:"TableCell",id:"tablecell",level:2},{value:"TableCell.GetContent",id:"tablecellgetcontent",level:3},{value:"TableColumn",id:"tablecolumn",level:2},{value:"TableColumnHeaderStyle",id:"tablecolumnheaderstyle",level:2},{value:"TableColumnHeaderStyle.background",id:"tablecolumnheaderstylebackground",level:3},{value:"TableColumnHeaderStyle.backgroundColor",id:"tablecolumnheaderstylebackgroundcolor",level:3},{value:"TableColumnHeaderStyle.height",id:"tablecolumnheaderstyleheight",level:3},{value:"TableColumnHeaderStyle.opaque",id:"tablecolumnheaderstyleopaque",level:3},{value:"TableColumnStyle",id:"tablecolumnstyle",level:2},{value:"TableColumnStyle.columnBackgroundColors",id:"tablecolumnstylecolumnbackgroundcolors",level:3},{value:"TableContext",id:"tablecontext",level:2},{value:"TableHelper",id:"tablehelper",level:2},{value:"TableHelper.ClampVectorMin",id:"tablehelperclampvectormin",level:3},{value:"TableHelper.GetAllColumnWidth",id:"tablehelpergetallcolumnwidth",level:3},{value:"TableHelper.GetAllRowAndGapHeight",id:"tablehelpergetallrowandgapheight",level:3},{value:"TableHelper.GetAllRowHeight",id:"tablehelpergetallrowheight",level:3},{value:"TableHelper.GetBackgroundColor",id:"tablehelpergetbackgroundcolor",level:3},{value:"TableHelper.GetCarouselProgress",id:"tablehelpergetcarouselprogress",level:3},{value:"TableHelper.GetColumnAutoEachWidth",id:"tablehelpergetcolumnautoeachwidth",level:3},{value:"TableHelper.GetColumnHeaderBackgroundColor",id:"tablehelpergetcolumnheaderbackgroundcolor",level:3},{value:"TableHelper.GetColumnHeaderHeight",id:"tablehelpergetcolumnheaderheight",level:3},{value:"TableHelper.GetColumnWidth",id:"tablehelpergetcolumnwidth",level:3},{value:"TableHelper.GetDataLabelStyle",id:"tablehelpergetdatalabelstyle",level:3},{value:"TableHelper.GetHeaderLabelStyle",id:"tablehelpergetheaderlabelstyle",level:3},{value:"TableHelper.GetHorizontalSeparatorColor",id:"tablehelpergethorizontalseparatorcolor",level:3},{value:"TableHelper.GetRowAutoEachHeight",id:"tablehelpergetrowautoeachheight",level:3},{value:"TableHelper.GetRowBackgroundColor",id:"tablehelpergetrowbackgroundcolor",level:3},{value:"TableHelper.GetRowHeaderBgColor",id:"tablehelpergetrowheaderbgcolor",level:3},{value:"TableHelper.GetRowHeaderContent",id:"tablehelpergetrowheadercontent",level:3},{value:"TableHelper.GetRowHeaderWidth",id:"tablehelpergetrowheaderwidth",level:3},{value:"TableHelper.GetRowHeight",id:"tablehelpergetrowheight",level:3},{value:"TableHelper.GetScrollbarBackgroundColor",id:"tablehelpergetscrollbarbackgroundcolor",level:3},{value:"TableHelper.GetScrollbarColor",id:"tablehelpergetscrollbarcolor",level:3},{value:"TableHelper.GetScrollbarHorizontalRange",id:"tablehelpergetscrollbarhorizontalrange",level:3},{value:"TableHelper.GetScrollbarHorizontalRate",id:"tablehelpergetscrollbarhorizontalrate",level:3},{value:"TableHelper.GetScrollbarHorizontalWidth",id:"tablehelpergetscrollbarhorizontalwidth",level:3},{value:"TableHelper.GetScrollbarVerticalRange",id:"tablehelpergetscrollbarverticalrange",level:3},{value:"TableHelper.GetScrollbarVerticalRate",id:"tablehelpergetscrollbarverticalrate",level:3},{value:"TableHelper.GetScrollbarVerticalWidth",id:"tablehelpergetscrollbarverticalwidth",level:3},{value:"TableHelper.GetSelectColor",id:"tablehelpergetselectcolor",level:3},{value:"TableHelper.GetSelectHeaderColor",id:"tablehelpergetselectheadercolor",level:3},{value:"TableHelper.GetVerticalSeparatorColor",id:"tablehelpergetverticalseparatorcolor",level:3},{value:"TableHelper.IsNeedDrawColumnHeader",id:"tablehelperisneeddrawcolumnheader",level:3},{value:"TableHelper.IsNeedDrawRowHeader",id:"tablehelperisneeddrawrowheader",level:3},{value:"TableRow",id:"tablerow",level:2},{value:"TableRowHeaderStyle",id:"tablerowheaderstyle",level:2},{value:"TableRowStyle",id:"tablerowstyle",level:2},{value:"TableRowStyle.rowBackgroundColors",id:"tablerowstylerowbackgroundcolors",level:3},{value:"TableScrollbarStyle",id:"tablescrollbarstyle",level:2},{value:"TableSeparatorStyle",id:"tableseparatorstyle",level:2},{value:"TableSeparatorStyle.IsNeedDrawHorizontalSeparator",id:"tableseparatorstyleisneeddrawhorizontalseparator",level:3},{value:"TableSeparatorStyle.IsNeedDrawVerticalSeparator",id:"tableseparatorstyleisneeddrawverticalseparator",level:3},{value:"UIImage",id:"uiimage",level:2},{value:"UIProgress",id:"uiprogress",level:2},{value:"UIProgress.fillStyle",id:"uiprogressfillstyle",level:3},{value:"UIProgress.labelStyle",id:"uiprogresslabelstyle",level:3},{value:"UIProgress.max",id:"uiprogressmax",level:3},{value:"UIProgress.min",id:"uiprogressmin",level:3},{value:"UIProgress.step",id:"uiprogressstep",level:3},{value:"UIProgress.type",id:"uiprogresstype",level:3},{value:"UIProgress.value",id:"uiprogressvalue",level:3},{value:"UIProgress.DefaultCircle",id:"uiprogressdefaultcircle",level:3},{value:"UIProgress.Type",id:"uiprogresstype-1",level:2},{value:"UISlider",id:"uislider",level:2},{value:"UISlider.fillStyle",id:"uisliderfillstyle",level:3},{value:"UISlider.handleStyle",id:"uisliderhandlestyle",level:3},{value:"UISlider.interactable",id:"uisliderinteractable",level:3},{value:"UISlider.markNames",id:"uislidermarknames",level:3},{value:"UISlider.markStyle",id:"uislidermarkstyle",level:3},{value:"UISlider.markValues",id:"uislidermarkvalues",level:3},{value:"UISlider.max",id:"uislidermax",level:3},{value:"UISlider.min",id:"uislidermin",level:3},{value:"UISlider.onRangeChanged",id:"uislideronrangechanged",level:3},{value:"UISlider.onRangeChangedComplete",id:"uislideronrangechangedcomplete",level:3},{value:"UISlider.onValueChanged",id:"uislideronvaluechanged",level:3},{value:"UISlider.onValueChangedComplete",id:"uislideronvaluechangedcomplete",level:3},{value:"UISlider.step",id:"uisliderstep",level:3},{value:"UISlider.value",id:"uislidervalue",level:3},{value:"UISlider.OnBeginDrag",id:"uislideronbegindrag",level:3},{value:"UISlider.OnDrag",id:"uisliderondrag",level:3},{value:"UISlider.OnEndDrag",id:"uislideronenddrag",level:3},{value:"UISlider.OnPointerClick",id:"uislideronpointerclick",level:3},{value:"UISlider.SetValue",id:"uislidersetvalue",level:3},{value:"UISlider.value and the enum type.",id:"uislidervalue-and-the-enum-type",level:2},{value:"UISlider.value.",id:"uislidervalue-1",level:2},{value:"UISlider.ValueType",id:"uislidervaluetype",level:2},{value:"UIStatistic",id:"uistatistic",level:2},{value:"UIStatistic.GetCurrentValue",id:"uistatisticgetcurrentvalue",level:3},{value:"UIStatistic.Type",id:"uistatistictype",level:2},{value:"UISvgImage",id:"uisvgimage",level:2},{value:"UISvgImage.mirrorY",id:"uisvgimagemirrory",level:3},{value:"UISvgImage.svgPath",id:"uisvgimagesvgpath",level:3},{value:"UITable",id:"uitable",level:2},{value:"UITable.borderStyle",id:"uitableborderstyle",level:3},{value:"UITable.carouselStyle",id:"uitablecarouselstyle",level:3},{value:"UITable.columnCount",id:"uitablecolumncount",level:3},{value:"UITable.columnHeaderStyle",id:"uitablecolumnheaderstyle",level:3},{value:"UITable.columns",id:"uitablecolumns",level:3},{value:"UITable.columnStyle",id:"uitablecolumnstyle",level:3},{value:"UITable.data",id:"uitabledata",level:3},{value:"UITable.rowCount",id:"uitablerowcount",level:3},{value:"UITable.rowHeaderStyle",id:"uitablerowheaderstyle",level:3},{value:"UITable.rowStyle",id:"uitablerowstyle",level:3},{value:"UITable.scrollbarStyle",id:"uitablescrollbarstyle",level:3},{value:"UITable.separatorStyle",id:"uitableseparatorstyle",level:3},{value:"UITable.AddColumn",id:"uitableaddcolumn",level:3},{value:"UITable.AddRow",id:"uitableaddrow",level:3},{value:"UITable.ClearColumns",id:"uitableclearcolumns",level:3},{value:"UITable.ClearData",id:"uitablecleardata",level:3},{value:"UITable.GetContent",id:"uitablegetcontent",level:3},{value:"UITable.GetData",id:"uitablegetdata",level:3},{value:"UITable.OnBeginDrag",id:"uitableonbegindrag",level:3},{value:"UITable.OnDrag",id:"uitableondrag",level:3},{value:"UITable.OnEndDrag",id:"uitableonenddrag",level:3},{value:"UITable.OnPointerClick",id:"uitableonpointerclick",level:3},{value:"UITable.OnPointerEnter",id:"uitableonpointerenter",level:3},{value:"UITable.OnPointerExit",id:"uitableonpointerexit",level:3},{value:"UITable.OnScroll",id:"uitableonscroll",level:3},{value:"UITable.RefreshGraph",id:"uitablerefreshgraph",level:3},{value:"UITable.RefreshPosition",id:"uitablerefreshposition",level:3},{value:"UITable.RefreshTable",id:"uitablerefreshtable",level:3},{value:"UITable.RemoveColumn",id:"uitableremovecolumn",level:3},{value:"UITable.RemoveRow",id:"uitableremoverow",level:3},{value:"UITable.SetColumns",id:"uitablesetcolumns",level:3},{value:"UITable.SetColumnsAndData",id:"uitablesetcolumnsanddata",level:3},{value:"UITable.SetData",id:"uitablesetdata",level:3},{value:"UITable.UpdateCell",id:"uitableupdatecell",level:3},{value:"UITable.UpdateColumn",id:"uitableupdatecolumn",level:3},{value:"UITable.UpdateRow",id:"uitableupdaterow",level:3},{value:"UIText",id:"uitext",level:2},{value:"UITimePicker",id:"uitimepicker",level:2},{value:"UIToggle",id:"uitoggle",level:2},{value:"UIToggle.borderStyle",id:"uitoggleborderstyle",level:3},{value:"UIToggle.interactable",id:"uitoggleinteractable",level:3},{value:"UIToggle.isOn",id:"uitoggleison",level:3},{value:"UIToggle.labelStyle",id:"uitogglelabelstyle",level:3},{value:"UIToggle.markColor",id:"uitogglemarkcolor",level:3},{value:"UIToggle.markGap",id:"uitogglemarkgap",level:3},{value:"UIToggle.offColor",id:"uitoggleoffcolor",level:3},{value:"UIToggle.onColor",id:"uitoggleoncolor",level:3},{value:"UIToggle.onValueChanged",id:"uitoggleonvaluechanged",level:3},{value:"UIToggle.text",id:"uitoggletext",level:3},{value:"UIToggle.OnPointerClick",id:"uitoggleonpointerclick",level:3}];function c(e){const l={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.header,{children:(0,t.jsx)(l.h1,{id:"api",children:"API"})}),"\n",(0,t.jsx)(l.h2,{id:"datatype",children:"DataType"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"Options:"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"GameObject"}),":"]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"String"}),":"]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Double"}),":"]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Bool"}),":"]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Sprite"}),":"]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"fillstyle",children:"FillStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"Style of fill."}),"\n",(0,t.jsx)(l.h3,{id:"fillstyleautooffset",children:"FillStyle.autoOffset"}),"\n",(0,t.jsxs)(l.p,{children:["public bool autoOffset",(0,t.jsx)(l.br,{}),"\n","Whether to automatically offset the fill position. When true, it will automatically indent left and right according to the displayed text or slider size."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstylebackground",children:"FillStyle.background"}),"\n",(0,t.jsxs)(l.p,{children:["public Background background",(0,t.jsx)(l.br,{}),"\n","Background style."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstylecolor",children:"FillStyle.color"}),"\n",(0,t.jsxs)(l.p,{children:["public Color32 color",(0,t.jsx)(l.br,{}),"\n","Fill color."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstyleheight",children:"FillStyle.height"}),"\n",(0,t.jsxs)(l.p,{children:["public float height",(0,t.jsx)(l.br,{}),"\n","Height of fill. Higher priority than top and bottom. Represents the width of the ring in the circular progress bar."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstylelocation",children:"FillStyle.location"}),"\n",(0,t.jsxs)(l.p,{children:["public Location location",(0,t.jsx)(l.br,{}),"\n","Location of fill."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstyleradius",children:"FillStyle.radius"}),"\n",(0,t.jsxs)(l.p,{children:["public float radius",(0,t.jsx)(l.br,{}),"\n","Fill radius. Only valid in circular progress bar."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstyleroundcap",children:"FillStyle.roundCap"}),"\n",(0,t.jsxs)(l.p,{children:["public bool roundCap",(0,t.jsx)(l.br,{}),"\n","Whether to use round cap. Only valid in circular progress bar."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstyleshow",children:"FillStyle.show"}),"\n",(0,t.jsxs)(l.p,{children:["public bool show",(0,t.jsx)(l.br,{}),"\n","Whether to show fill."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstyletocolor",children:"FillStyle.toColor"}),"\n",(0,t.jsxs)(l.p,{children:["public Color32 toColor",(0,t.jsx)(l.br,{}),"\n","To color."]}),"\n",(0,t.jsx)(l.h3,{id:"fillstylewidth",children:"FillStyle.width"}),"\n",(0,t.jsxs)(l.p,{children:["public float width",(0,t.jsx)(l.br,{}),"\n","Width of fill."]}),"\n",(0,t.jsx)(l.h2,{id:"itablecell",children:"ITableCell"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Subclasses: ",(0,t.jsx)(l.a,{href:"#tablecell",children:"TableCell"})]}),"\n",(0,t.jsx)(l.h2,{id:"progresscontext",children:"ProgressContext"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.h2,{id:"slidercontext",children:"SliderContext"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.h2,{id:"sliderhandlestyle",children:"SliderHandleStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"Style of handle."}),"\n",(0,t.jsx)(l.h3,{id:"sliderhandlestylegradientcolor",children:"SliderHandleStyle.gradientColor"}),"\n",(0,t.jsxs)(l.p,{children:["public bool gradientColor",(0,t.jsx)(l.br,{}),"\n","Whether to use gradient color."]}),"\n",(0,t.jsx)(l.h3,{id:"sliderhandlestyleshow",children:"SliderHandleStyle.show"}),"\n",(0,t.jsxs)(l.p,{children:["public bool show",(0,t.jsx)(l.br,{}),"\n","Whether to show handle."]}),"\n",(0,t.jsx)(l.h3,{id:"sliderhandlestylesymbol",children:"SliderHandleStyle.symbol"}),"\n",(0,t.jsxs)(l.p,{children:["public SymbolStyle symbol",(0,t.jsx)(l.br,{}),"\n","Style of symbol."]}),"\n",(0,t.jsx)(l.h2,{id:"slidermarkstyle",children:"SliderMarkStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"Style of mark."}),"\n",(0,t.jsx)(l.h3,{id:"slidermarkstyleincluded",children:"SliderMarkStyle.included"}),"\n",(0,t.jsxs)(l.p,{children:["public bool included",(0,t.jsx)(l.br,{}),"\n","Whether to include in the range. When true, the mark is displayed as the progress bar color, otherwise it is displayed as the background color."]}),"\n",(0,t.jsx)(l.h3,{id:"slidermarkstylelabel",children:"SliderMarkStyle.label"}),"\n",(0,t.jsxs)(l.p,{children:["public LabelStyle label",(0,t.jsx)(l.br,{}),"\n","Style of label."]}),"\n",(0,t.jsx)(l.h3,{id:"slidermarkstyleshow",children:"SliderMarkStyle.show"}),"\n",(0,t.jsxs)(l.p,{children:["public bool show",(0,t.jsx)(l.br,{}),"\n","Whether to show mark."]}),"\n",(0,t.jsx)(l.h3,{id:"slidermarkstylesymbol",children:"SliderMarkStyle.symbol"}),"\n",(0,t.jsxs)(l.p,{children:["public SymbolStyle symbol",(0,t.jsx)(l.br,{}),"\n","Style of symbol."]}),"\n",(0,t.jsx)(l.h2,{id:"statisticcontext",children:"StatisticContext"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.h2,{id:"statistichelper",children:"StatisticHelper"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.h3,{id:"statistichelpergetcontentposition",children:"StatisticHelper.GetContentPosition"}),"\n",(0,t.jsx)(l.p,{children:"public static Vector3 GetContentPosition(UIStatistic statistic)"}),"\n",(0,t.jsx)(l.h3,{id:"statistichelpergettitlecontent",children:"StatisticHelper.GetTitleContent"}),"\n",(0,t.jsx)(l.p,{children:"public static string GetTitleContent(UIStatistic statistic, double value)"}),"\n",(0,t.jsx)(l.h3,{id:"statistichelpergetvaluecontent",children:"StatisticHelper.GetValueContent"}),"\n",(0,t.jsx)(l.p,{children:"public static string GetValueContent(UIStatistic statistic, double value)"}),"\n",(0,t.jsx)(l.h2,{id:"tablecarouselcontext",children:"TableCarouselContext"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.h2,{id:"tablecarouselmode",children:"TableCarouselMode"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"the play mode of carousel."}),"\n",(0,t.jsx)(l.p,{children:"Options:"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Loop"}),": play loop."]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"tablecarouselstyle",children:"TableCarouselStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"The table carousel style."}),"\n",(0,t.jsx)(l.h2,{id:"tablecarouseltype",children:"TableCarouselType"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"table carousel type."}),"\n",(0,t.jsx)(l.p,{children:"Options:"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Pixel"}),": pixel carousel."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Row"}),": single row carousel."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Page"}),": page carousel."]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"tablecell",children:"TableCell"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"}),",",(0,t.jsx)(l.a,{href:"#itablecell",children:"ITableCell"})]}),"\n",(0,t.jsx)(l.p,{children:"\u8868\u683c\u7684\u5355\u5143\u683c\u6570\u636e\u3002"}),"\n",(0,t.jsx)(l.h3,{id:"tablecellgetcontent",children:"TableCell.GetContent"}),"\n",(0,t.jsxs)(l.p,{children:["public string GetContent()",(0,t.jsx)(l.br,{}),"\n","get the content of the cell."]}),"\n",(0,t.jsx)(l.h2,{id:"tablecolumn",children:"TableColumn"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"\u5217\u8868\u5934\u5185\u5bb9\u548c\u6837\u5f0f\u3002"}),"\n",(0,t.jsx)(l.h2,{id:"tablecolumnheaderstyle",children:"TableColumnHeaderStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"the style of the table column header."}),"\n",(0,t.jsx)(l.h3,{id:"tablecolumnheaderstylebackground",children:"TableColumnHeaderStyle.background"}),"\n",(0,t.jsxs)(l.p,{children:["public ImageStyle background",(0,t.jsx)(l.br,{}),"\n","the background style of the column header."]}),"\n",(0,t.jsx)(l.h3,{id:"tablecolumnheaderstylebackgroundcolor",children:"TableColumnHeaderStyle.backgroundColor"}),"\n",(0,t.jsxs)(l.p,{children:["public Color32 backgroundColor",(0,t.jsx)(l.br,{}),"\n","the background color of the column header."]}),"\n",(0,t.jsx)(l.h3,{id:"tablecolumnheaderstyleheight",children:"TableColumnHeaderStyle.height"}),"\n",(0,t.jsxs)(l.p,{children:["public float height",(0,t.jsx)(l.br,{}),"\n","the height of the column header."]}),"\n",(0,t.jsx)(l.h3,{id:"tablecolumnheaderstyleopaque",children:"TableColumnHeaderStyle.opaque"}),"\n",(0,t.jsxs)(l.p,{children:["public bool opaque",(0,t.jsx)(l.br,{}),"\n","whether the column header is opaque."]}),"\n",(0,t.jsx)(l.h2,{id:"tablecolumnstyle",children:"TableColumnStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"The style of table column."}),"\n",(0,t.jsx)(l.h3,{id:"tablecolumnstylecolumnbackgroundcolors",children:"TableColumnStyle.columnBackgroundColors"}),"\n",(0,t.jsxs)(l.p,{children:["public List<Color32> columnBackgroundColors",(0,t.jsx)(l.br,{}),"\n","the background color of column."]}),"\n",(0,t.jsx)(l.h2,{id:"tablecontext",children:"TableContext"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"\u8868\u683c\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u3002"}),"\n",(0,t.jsx)(l.h2,{id:"tablehelper",children:"TableHelper"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"\u8868\u683c\u5e2e\u52a9\u7c7b\u3002"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelperclampvectormin",children:"TableHelper.ClampVectorMin"}),"\n",(0,t.jsx)(l.p,{children:"public static void ClampVectorMin(float minX, ref Vector3 p1, ref Vector3 p2, ref Vector3 p3, ref Vector3 p4)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetallcolumnwidth",children:"TableHelper.GetAllColumnWidth"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetAllColumnWidth(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetallrowandgapheight",children:"TableHelper.GetAllRowAndGapHeight"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetAllRowAndGapHeight(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetallrowheight",children:"TableHelper.GetAllRowHeight"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetAllRowHeight(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetbackgroundcolor",children:"TableHelper.GetBackgroundColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetBackgroundColor(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetcarouselprogress",children:"TableHelper.GetCarouselProgress"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetCarouselProgress(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetcolumnautoeachwidth",children:"TableHelper.GetColumnAutoEachWidth"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetColumnAutoEachWidth(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetcolumnheaderbackgroundcolor",children:"TableHelper.GetColumnHeaderBackgroundColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetColumnHeaderBackgroundColor(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetcolumnheaderheight",children:"TableHelper.GetColumnHeaderHeight"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetColumnHeaderHeight(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetcolumnwidth",children:"TableHelper.GetColumnWidth"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetColumnWidth(UITable table, int columnIndex, float eachWidth = 0)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetdatalabelstyle",children:"TableHelper.GetDataLabelStyle"}),"\n",(0,t.jsx)(l.p,{children:"public static LabelStyle GetDataLabelStyle(UITable table, int index)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetheaderlabelstyle",children:"TableHelper.GetHeaderLabelStyle"}),"\n",(0,t.jsx)(l.p,{children:"public static LabelStyle GetHeaderLabelStyle(UITable table, int index)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergethorizontalseparatorcolor",children:"TableHelper.GetHorizontalSeparatorColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetHorizontalSeparatorColor(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetrowautoeachheight",children:"TableHelper.GetRowAutoEachHeight"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetRowAutoEachHeight(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetrowbackgroundcolor",children:"TableHelper.GetRowBackgroundColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetRowBackgroundColor(UITable table, int index)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetrowheaderbgcolor",children:"TableHelper.GetRowHeaderBgColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetRowHeaderBgColor(UITable table, int rowIndex)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetrowheadercontent",children:"TableHelper.GetRowHeaderContent"}),"\n",(0,t.jsxs)(l.p,{children:["public static string GetRowHeaderContent(UITable table, int i)",(0,t.jsx)(l.br,{}),"\n","\u8868\u683c\u5e2e\u52a9\u7c7b\u3002"]}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetrowheaderwidth",children:"TableHelper.GetRowHeaderWidth"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetRowHeaderWidth(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetrowheight",children:"TableHelper.GetRowHeight"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetRowHeight(UITable table, int rowIndex, float eachHeight = 0)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetscrollbarbackgroundcolor",children:"TableHelper.GetScrollbarBackgroundColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetScrollbarBackgroundColor(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetscrollbarcolor",children:"TableHelper.GetScrollbarColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetScrollbarColor(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetscrollbarhorizontalrange",children:"TableHelper.GetScrollbarHorizontalRange"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetScrollbarHorizontalRange(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetscrollbarhorizontalrate",children:"TableHelper.GetScrollbarHorizontalRate"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetScrollbarHorizontalRate(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetscrollbarhorizontalwidth",children:"TableHelper.GetScrollbarHorizontalWidth"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetScrollbarHorizontalWidth(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetscrollbarverticalrange",children:"TableHelper.GetScrollbarVerticalRange"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetScrollbarVerticalRange(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetscrollbarverticalrate",children:"TableHelper.GetScrollbarVerticalRate"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetScrollbarVerticalRate(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetscrollbarverticalwidth",children:"TableHelper.GetScrollbarVerticalWidth"}),"\n",(0,t.jsx)(l.p,{children:"public static float GetScrollbarVerticalWidth(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetselectcolor",children:"TableHelper.GetSelectColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetSelectColor(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetselectheadercolor",children:"TableHelper.GetSelectHeaderColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetSelectHeaderColor(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelpergetverticalseparatorcolor",children:"TableHelper.GetVerticalSeparatorColor"}),"\n",(0,t.jsx)(l.p,{children:"public static Color32 GetVerticalSeparatorColor(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelperisneeddrawcolumnheader",children:"TableHelper.IsNeedDrawColumnHeader"}),"\n",(0,t.jsx)(l.p,{children:"public static bool IsNeedDrawColumnHeader(UITable table)"}),"\n",(0,t.jsx)(l.h3,{id:"tablehelperisneeddrawrowheader",children:"TableHelper.IsNeedDrawRowHeader"}),"\n",(0,t.jsx)(l.p,{children:"public static bool IsNeedDrawRowHeader(UITable table)"}),"\n",(0,t.jsx)(l.h2,{id:"tablerow",children:"TableRow"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"the row data of the table."}),"\n",(0,t.jsx)(l.h2,{id:"tablerowheaderstyle",children:"TableRowHeaderStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"the style of the table row header."}),"\n",(0,t.jsx)(l.h2,{id:"tablerowstyle",children:"TableRowStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"The style of table row."}),"\n",(0,t.jsx)(l.h3,{id:"tablerowstylerowbackgroundcolors",children:"TableRowStyle.rowBackgroundColors"}),"\n",(0,t.jsxs)(l.p,{children:["public List<Color32> rowBackgroundColors",(0,t.jsx)(l.br,{}),"\n","the background color of row."]}),"\n",(0,t.jsx)(l.h2,{id:"tablescrollbarstyle",children:"TableScrollbarStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"the style of the table carousel."}),"\n",(0,t.jsx)(l.h2,{id:"tableseparatorstyle",children:"TableSeparatorStyle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#childcomponent",children:"ChildComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"the style of the table separator."}),"\n",(0,t.jsx)(l.h3,{id:"tableseparatorstyleisneeddrawhorizontalseparator",children:"TableSeparatorStyle.IsNeedDrawHorizontalSeparator"}),"\n",(0,t.jsxs)(l.p,{children:["public bool IsNeedDrawHorizontalSeparator()",(0,t.jsx)(l.br,{}),"\n","whether to need to draw the horizontal separator."]}),"\n",(0,t.jsx)(l.h3,{id:"tableseparatorstyleisneeddrawverticalseparator",children:"TableSeparatorStyle.IsNeedDrawVerticalSeparator"}),"\n",(0,t.jsxs)(l.p,{children:["public bool IsNeedDrawVerticalSeparator()",(0,t.jsx)(l.br,{}),"\n","whether to need to draw the vertical separator."]}),"\n",(0,t.jsx)(l.h2,{id:"uiimage",children:"UIImage"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#uicomponent",children:"UIComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"ui component of image. \u56fe\u7247UI\u7ec4\u4ef6\u3002"}),"\n",(0,t.jsx)(l.h2,{id:"uiprogress",children:"UIProgress"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#uicomponent",children:"UIComponent"})]}),"\n",(0,t.jsx)(l.h3,{id:"uiprogressfillstyle",children:"UIProgress.fillStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public FillStyle fillStyle",(0,t.jsx)(l.br,{}),"\n","The style of progress bar fill."]}),"\n",(0,t.jsx)(l.h3,{id:"uiprogresslabelstyle",children:"UIProgress.labelStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public LabelStyle labelStyle",(0,t.jsx)(l.br,{}),"\n","The style of progress bar label."]}),"\n",(0,t.jsx)(l.h3,{id:"uiprogressmax",children:"UIProgress.max"}),"\n",(0,t.jsx)(l.p,{children:"public float max"}),"\n",(0,t.jsx)(l.h3,{id:"uiprogressmin",children:"UIProgress.min"}),"\n",(0,t.jsxs)(l.p,{children:["public float min",(0,t.jsx)(l.br,{}),"\n","The minimum value of progress."]}),"\n",(0,t.jsx)(l.h3,{id:"uiprogressstep",children:"UIProgress.step"}),"\n",(0,t.jsxs)(l.p,{children:["public float step",(0,t.jsx)(l.br,{}),"\n","The step of progress."]}),"\n",(0,t.jsx)(l.h3,{id:"uiprogresstype",children:"UIProgress.type"}),"\n",(0,t.jsxs)(l.p,{children:["public Type type",(0,t.jsx)(l.br,{}),"\n","The type of progress."]}),"\n",(0,t.jsx)(l.h3,{id:"uiprogressvalue",children:"UIProgress.value"}),"\n",(0,t.jsxs)(l.p,{children:["public float value",(0,t.jsx)(l.br,{}),"\n","The value of progress."]}),"\n",(0,t.jsx)(l.h3,{id:"uiprogressdefaultcircle",children:"UIProgress.DefaultCircle"}),"\n",(0,t.jsx)(l.p,{children:"public void DefaultCircle()"}),"\n",(0,t.jsx)(l.h2,{id:"uiprogresstype-1",children:"UIProgress.Type"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"The type of progress."}),"\n",(0,t.jsx)(l.p,{children:"Options:"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Line"}),": Horizontal progress bar."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Circle"}),": Circle progress bar."]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"uislider",children:"UISlider"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#uicomponent",children:"UIComponent"})]}),"\n",(0,t.jsxs)(l.blockquote,{children:["\n",(0,t.jsxs)(l.p,{children:["Since ",(0,t.jsx)(l.code,{children:"v3.13.0"})]}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"ui component of slider."}),"\n",(0,t.jsx)(l.h3,{id:"uisliderfillstyle",children:"UISlider.fillStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public FillStyle fillStyle",(0,t.jsx)(l.br,{}),"\n","Style of fill."]}),"\n",(0,t.jsx)(l.h3,{id:"uisliderhandlestyle",children:"UISlider.handleStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public SliderHandleStyle handleStyle",(0,t.jsx)(l.br,{}),"\n","Style of handle."]}),"\n",(0,t.jsx)(l.h3,{id:"uisliderinteractable",children:"UISlider.interactable"}),"\n",(0,t.jsxs)(l.p,{children:["public bool interactable",(0,t.jsx)(l.br,{}),"\n","Whether the slider is interactable."]}),"\n",(0,t.jsx)(l.h3,{id:"uislidermarknames",children:"UISlider.markNames"}),"\n",(0,t.jsxs)(l.p,{children:["public List<string> markNames",(0,t.jsx)(l.br,{}),"\n","Names of marks. When specified with mark values, the mark and text are displayed at the specified position."]}),"\n",(0,t.jsx)(l.h3,{id:"uislidermarkstyle",children:"UISlider.markStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public SliderMarkStyle markStyle",(0,t.jsx)(l.br,{}),"\n","Style of mark."]}),"\n",(0,t.jsx)(l.h3,{id:"uislidermarkvalues",children:"UISlider.markValues"}),"\n",(0,t.jsxs)(l.p,{children:["public List<float> markValues",(0,t.jsx)(l.br,{}),"\n","Values of marks. When specified with mark names, the mark and text are displayed at the specified position."]}),"\n",(0,t.jsx)(l.h3,{id:"uislidermax",children:"UISlider.max"}),"\n",(0,t.jsxs)(l.p,{children:["public float max",(0,t.jsx)(l.br,{}),"\n","Maximum value. The slider value cannot be greater than the maximum value."]}),"\n",(0,t.jsx)(l.h3,{id:"uislidermin",children:"UISlider.min"}),"\n",(0,t.jsxs)(l.p,{children:["public float min",(0,t.jsx)(l.br,{}),"\n","Minimum value. The slider value cannot be less than the minimum value."]}),"\n",(0,t.jsx)(l.h3,{id:"uislideronrangechanged",children:"UISlider.onRangeChanged"}),"\n",(0,t.jsxs)(l.p,{children:["public Action<float, float> onRangeChanged",(0,t.jsx)(l.br,{}),"\n","Callback when the range of the slider changes."]}),"\n",(0,t.jsx)(l.h3,{id:"uislideronrangechangedcomplete",children:"UISlider.onRangeChangedComplete"}),"\n",(0,t.jsxs)(l.p,{children:["public Action<float, float> onRangeChangedComplete",(0,t.jsx)(l.br,{}),"\n","Callback when the range of the slider changes is completed."]}),"\n",(0,t.jsx)(l.h3,{id:"uislideronvaluechanged",children:"UISlider.onValueChanged"}),"\n",(0,t.jsxs)(l.p,{children:["public Action<float> onValueChanged",(0,t.jsx)(l.br,{}),"\n","Callback when the value of the slider changes."]}),"\n",(0,t.jsx)(l.h3,{id:"uislideronvaluechangedcomplete",children:"UISlider.onValueChangedComplete"}),"\n",(0,t.jsxs)(l.p,{children:["public Action<float> onValueChangedComplete",(0,t.jsx)(l.br,{}),"\n","Callback when the value of the slider changes is completed."]}),"\n",(0,t.jsx)(l.h3,{id:"uisliderstep",children:"UISlider.step"}),"\n",(0,t.jsxs)(l.p,{children:["public float step",(0,t.jsx)(l.br,{}),"\n","Step size. The value of the slider will change by step size."]}),"\n",(0,t.jsx)(l.h3,{id:"uislidervalue",children:"UISlider.value"}),"\n",(0,t.jsxs)(l.p,{children:["public float[] value",(0,t.jsx)(l.br,{}),"\n","Current value of the slider. This is a two-dimensional array. When it is a range value type, the two values represent the minimum and maximum values respectively, and when it is other types, only the second value is used."]}),"\n",(0,t.jsx)(l.h3,{id:"uislideronbegindrag",children:"UISlider.OnBeginDrag"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnBeginDrag(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uisliderondrag",children:"UISlider.OnDrag"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnDrag(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uislideronenddrag",children:"UISlider.OnEndDrag"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnEndDrag(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uislideronpointerclick",children:"UISlider.OnPointerClick"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnPointerClick(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uislidersetvalue",children:"UISlider.SetValue"}),"\n",(0,t.jsxs)(l.p,{children:["public void SetValue(float rangeMin, float rangeMax)",(0,t.jsx)(l.br,{}),"\n","Set the range value of the slider."]}),"\n",(0,t.jsxs)(l.p,{children:["public void SetValue(float rangeMin, float rangeMax, float min, float max)",(0,t.jsx)(l.br,{}),"\n","Set the range value and the maximum and minimum values."]}),"\n",(0,t.jsxs)(l.p,{children:["public void SetValue(float value, float min, float max)",(0,t.jsx)(l.br,{}),"\n","Set the value and the maximum and minimum values."]}),"\n",(0,t.jsx)(l.h2,{id:"uislidervalue-and-the-enum-type",children:"UISlider.value and the enum type."}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"Options:"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"public void SetValue(float value"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"if (!enumType.IsEnum) return;"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"valueType = ValueType.Enum;"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"value[0] = 0;"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"value[1] = value;"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"var fields = enumType.GetFields(BindingFlags.Public | BindingFlags.Static);"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"markValues.Clear();"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"markNames.Clear();"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"foreach (var field in fields)"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"var v = (int)field.GetValue(null);"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"if (m_Min > v) m_Min = v;"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"if (m_Max < v) m_Max = v;"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"markValues.Add(v);"}),": Set the current enum value and the enum type."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"markNames.Add(field.Name);"}),": Set the current enum value and the enum type."]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"uislidervalue-1",children:"UISlider.value."}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"Options:"}),"\n",(0,t.jsx)(l.h2,{id:"uislidervaluetype",children:"UISlider.ValueType"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"Type of value."}),"\n",(0,t.jsx)(l.p,{children:"Options:"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Default"}),": Default value."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Range"}),": Range value."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Enum"}),": Enum value."]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"uistatistic",children:"UIStatistic"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#uicomponent",children:"UIComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"Statistical value UI component. Used to display statistical values. Suitable for highlighting specific numbers/groups of numbers or presenting statistical data with descriptions."}),"\n",(0,t.jsx)(l.h3,{id:"uistatisticgetcurrentvalue",children:"UIStatistic.GetCurrentValue"}),"\n",(0,t.jsxs)(l.p,{children:["public double GetCurrentValue(float animationDuration)",(0,t.jsx)(l.br,{}),"\n","\u83b7\u53d6\u5f53\u524d\u65f6\u523b\u7684\u6570\u503c\u3002\u5f53\u6709\u53d8\u66f4\u52a8\u753b\u65f6\uff0c\u8fd4\u56de\u52a8\u753b\u8fc7\u7a0b\u4e2d\u7684\u6570\u503c\u3002"]}),"\n",(0,t.jsx)(l.h2,{id:"uistatistictype",children:"UIStatistic.Type"}),"\n",(0,t.jsx)(l.p,{children:"class in XCharts.Runtime.UI"}),"\n",(0,t.jsx)(l.p,{children:"The type of statistic."}),"\n",(0,t.jsx)(l.p,{children:"Options:"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Default"}),": default type. display text."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"Countdown"}),": countdown type. Automatic countdown. At this time, value is used as seconds."]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"uisvgimage",children:"UISvgImage"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime / Inherits from: ",(0,t.jsx)(l.a,{href:"https://docs.unity3d.com/ScriptReference/30_search.html?q=maskablegraphic",children:"MaskableGraphic"})]}),"\n",(0,t.jsx)(l.h3,{id:"uisvgimagemirrory",children:"UISvgImage.mirrorY"}),"\n",(0,t.jsx)(l.p,{children:"public bool mirrorY"}),"\n",(0,t.jsx)(l.h3,{id:"uisvgimagesvgpath",children:"UISvgImage.svgPath"}),"\n",(0,t.jsx)(l.p,{children:"public string svgPath"}),"\n",(0,t.jsx)(l.h2,{id:"uitable",children:"UITable"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#uicomponent",children:"UIComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"\u8868\u683cUI\u7ec4\u4ef6\u3002 \u7528\u4e8e\u5c55\u793a\u884c\u5217\u6570\u636e\u3002"}),"\n",(0,t.jsx)(l.h3,{id:"uitableborderstyle",children:"UITable.borderStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public BorderStyle borderStyle",(0,t.jsx)(l.br,{}),"\n","the border style of table."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablecarouselstyle",children:"UITable.carouselStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public TableCarouselStyle carouselStyle",(0,t.jsx)(l.br,{}),"\n","the style of carousel."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablecolumncount",children:"UITable.columnCount"}),"\n",(0,t.jsxs)(l.p,{children:["public int columnCount",(0,t.jsx)(l.br,{}),"\n","the count of column."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablecolumnheaderstyle",children:"UITable.columnHeaderStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public TableColumnHeaderStyle columnHeaderStyle",(0,t.jsx)(l.br,{}),"\n","the default style of column header."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablecolumns",children:"UITable.columns"}),"\n",(0,t.jsxs)(l.p,{children:["public List<TableColumn> columns",(0,t.jsx)(l.br,{}),"\n","the style of column header."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablecolumnstyle",children:"UITable.columnStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public TableColumnStyle columnStyle",(0,t.jsx)(l.br,{}),"\n","the column style of table."]}),"\n",(0,t.jsx)(l.h3,{id:"uitabledata",children:"UITable.data"}),"\n",(0,t.jsxs)(l.p,{children:["public List<TableRow> data",(0,t.jsx)(l.br,{}),"\n","the data of table."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablerowcount",children:"UITable.rowCount"}),"\n",(0,t.jsxs)(l.p,{children:["public int rowCount",(0,t.jsx)(l.br,{}),"\n","the count of row."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablerowheaderstyle",children:"UITable.rowHeaderStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public TableRowHeaderStyle rowHeaderStyle",(0,t.jsx)(l.br,{}),"\n","the style of row header."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablerowstyle",children:"UITable.rowStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public TableRowStyle rowStyle",(0,t.jsx)(l.br,{}),"\n","the style of row."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablescrollbarstyle",children:"UITable.scrollbarStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public TableScrollbarStyle scrollbarStyle",(0,t.jsx)(l.br,{}),"\n","the style of scrollbar."]}),"\n",(0,t.jsx)(l.h3,{id:"uitableseparatorstyle",children:"UITable.separatorStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public TableSeparatorStyle separatorStyle",(0,t.jsx)(l.br,{}),"\n","the style of separator."]}),"\n",(0,t.jsx)(l.h3,{id:"uitableaddcolumn",children:"UITable.AddColumn"}),"\n",(0,t.jsxs)(l.p,{children:["public void AddColumn(string columnName, List<double> columnData)",(0,t.jsx)(l.br,{}),"\n","add a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void AddColumn(string columnName, List<Sprite> columnData)",(0,t.jsx)(l.br,{}),"\n","add a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void AddColumn(string columnName, List<string> columnData)",(0,t.jsx)(l.br,{}),"\n","add a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void AddColumn(string columnName, params double[] colummnData)",(0,t.jsx)(l.br,{}),"\n","add a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void AddColumn(string columnName, params Sprite[] columnData)",(0,t.jsx)(l.br,{}),"\n","add a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void AddColumn(string columnName, params string[] columnData)",(0,t.jsx)(l.br,{}),"\n","add a column data."]}),"\n",(0,t.jsx)(l.h3,{id:"uitableaddrow",children:"UITable.AddRow"}),"\n",(0,t.jsx)(l.p,{children:"public void AddRow(List<double> row)"}),"\n",(0,t.jsxs)(l.blockquote,{children:["\n",(0,t.jsxs)(l.p,{children:["Since ",(0,t.jsx)(l.code,{children:"3.15.0"})]}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"add a row data."}),"\n",(0,t.jsx)(l.p,{children:"public void AddRow(params double[] row)"}),"\n",(0,t.jsx)(l.p,{children:"public void AddRow(params string[] row)"}),"\n",(0,t.jsxs)(l.blockquote,{children:["\n",(0,t.jsxs)(l.p,{children:["Since ",(0,t.jsx)(l.code,{children:"3.15.0"})]}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"add a row data."}),"\n",(0,t.jsx)(l.p,{children:"public void AddRow(TableRow row)"}),"\n",(0,t.jsxs)(l.blockquote,{children:["\n",(0,t.jsxs)(l.p,{children:["Since ",(0,t.jsx)(l.code,{children:"3.15.0"})]}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"add a row data."}),"\n",(0,t.jsx)(l.h3,{id:"uitableclearcolumns",children:"UITable.ClearColumns"}),"\n",(0,t.jsxs)(l.p,{children:["public void ClearColumns()",(0,t.jsx)(l.br,{}),"\n","clear the table columns."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablecleardata",children:"UITable.ClearData"}),"\n",(0,t.jsxs)(l.p,{children:["public void ClearData()",(0,t.jsx)(l.br,{}),"\n","clear the table data."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablegetcontent",children:"UITable.GetContent"}),"\n",(0,t.jsxs)(l.p,{children:["public string GetContent(int row, int column)",(0,t.jsx)(l.br,{}),"\n","get the table cell content by row and column."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablegetdata",children:"UITable.GetData"}),"\n",(0,t.jsxs)(l.p,{children:["public TableCell GetData(int row, int column)",(0,t.jsx)(l.br,{}),"\n","get the table cell data by row and column."]}),"\n",(0,t.jsx)(l.h3,{id:"uitableonbegindrag",children:"UITable.OnBeginDrag"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnBeginDrag(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uitableondrag",children:"UITable.OnDrag"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnDrag(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uitableonenddrag",children:"UITable.OnEndDrag"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnEndDrag(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uitableonpointerclick",children:"UITable.OnPointerClick"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnPointerClick(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uitableonpointerenter",children:"UITable.OnPointerEnter"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnPointerEnter(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uitableonpointerexit",children:"UITable.OnPointerExit"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnPointerExit(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uitableonscroll",children:"UITable.OnScroll"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnScroll(PointerEventData eventData)"}),"\n",(0,t.jsx)(l.h3,{id:"uitablerefreshgraph",children:"UITable.RefreshGraph"}),"\n",(0,t.jsx)(l.p,{children:"public override void RefreshGraph()"}),"\n",(0,t.jsx)(l.h3,{id:"uitablerefreshposition",children:"UITable.RefreshPosition"}),"\n",(0,t.jsx)(l.p,{children:"public virtual void RefreshPosition()"}),"\n",(0,t.jsx)(l.h3,{id:"uitablerefreshtable",children:"UITable.RefreshTable"}),"\n",(0,t.jsxs)(l.p,{children:["public void RefreshTable()",(0,t.jsx)(l.br,{}),"\n","refresh the table."]}),"\n",(0,t.jsx)(l.h3,{id:"uitableremovecolumn",children:"UITable.RemoveColumn"}),"\n",(0,t.jsx)(l.p,{children:"public void RemoveColumn(int columnIndex)"}),"\n",(0,t.jsxs)(l.blockquote,{children:["\n",(0,t.jsxs)(l.p,{children:["Since ",(0,t.jsx)(l.code,{children:"3.15.0"})]}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"remove a column data."}),"\n",(0,t.jsx)(l.h3,{id:"uitableremoverow",children:"UITable.RemoveRow"}),"\n",(0,t.jsxs)(l.p,{children:["public void RemoveRow(int rowIndex)",(0,t.jsx)(l.br,{}),"\n","remove a row data."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablesetcolumns",children:"UITable.SetColumns"}),"\n",(0,t.jsxs)(l.p,{children:["public void SetColumns(List<string> columns)",(0,t.jsx)(l.br,{}),"\n","set the table columns."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablesetcolumnsanddata",children:"UITable.SetColumnsAndData"}),"\n",(0,t.jsxs)(l.p,{children:["public void SetColumnsAndData(List<string> columns, List<List<string>> rows)",(0,t.jsx)(l.br,{}),"\n","set the table columns and data."]}),"\n",(0,t.jsx)(l.h3,{id:"uitablesetdata",children:"UITable.SetData"}),"\n",(0,t.jsxs)(l.p,{children:["public void SetData(List<List<string>> rows)",(0,t.jsx)(l.br,{}),"\n","set the table data."]}),"\n",(0,t.jsx)(l.h3,{id:"uitableupdatecell",children:"UITable.UpdateCell"}),"\n",(0,t.jsxs)(l.p,{children:["public void UpdateCell(int row, int column, double value)",(0,t.jsx)(l.br,{}),"\n","update a cell data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void UpdateCell(int row, int column, Sprite value)",(0,t.jsx)(l.br,{}),"\n","update a cell data."]}),"\n",(0,t.jsx)(l.h3,{id:"uitableupdatecolumn",children:"UITable.UpdateColumn"}),"\n",(0,t.jsxs)(l.p,{children:["public void UpdateColumn(int columnIndex, List<double> column)",(0,t.jsx)(l.br,{}),"\n","update a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void UpdateColumn(int columnIndex, List<Sprite> column)",(0,t.jsx)(l.br,{}),"\n","update a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void UpdateColumn(int columnIndex, params double[] column)",(0,t.jsx)(l.br,{}),"\n","update a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void UpdateColumn(int columnIndex, params Sprite[] column)",(0,t.jsx)(l.br,{}),"\n","update a column data."]}),"\n",(0,t.jsxs)(l.p,{children:["public void UpdateColumn(int columnIndex, params string[] column)",(0,t.jsx)(l.br,{}),"\n","update a column data."]}),"\n",(0,t.jsx)(l.h3,{id:"uitableupdaterow",children:"UITable.UpdateRow"}),"\n",(0,t.jsxs)(l.p,{children:["public void UpdateRow(int rowIndex, params string[] row)",(0,t.jsx)(l.br,{}),"\n","update a row data."]}),"\n",(0,t.jsx)(l.h2,{id:"uitext",children:"UIText"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#uicomponent",children:"UIComponent"})]}),"\n",(0,t.jsxs)(l.blockquote,{children:["\n",(0,t.jsxs)(l.p,{children:["Since ",(0,t.jsx)(l.code,{children:"v3.13.0"})]}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"ui component of text. UI\u6587\u672c\u7ec4\u4ef6\u3002"}),"\n",(0,t.jsx)(l.h2,{id:"uitimepicker",children:"UITimePicker"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#uicomponent",children:"UIComponent"})]}),"\n",(0,t.jsx)(l.p,{children:"\u65f6\u95f4\u9009\u62e9UI\u7ec4\u4ef6\u3002 \u8f93\u5165\u6216\u9009\u62e9\u65f6\u95f4\u7684\u63a7\u4ef6\u3002\u5f53\u7528\u6237\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u65f6\u95f4\uff0c\u53ef\u4ee5\u70b9\u51fb\u6807\u51c6\u8f93\u5165\u6846\uff0c\u5f39\u51fa\u65f6\u95f4\u9762\u677f\u8fdb\u884c\u9009\u62e9\u3002"}),"\n",(0,t.jsx)(l.h2,{id:"uitoggle",children:"UIToggle"}),"\n",(0,t.jsxs)(l.p,{children:["class in XCharts.Runtime.UI / Inherits from: ",(0,t.jsx)(l.a,{href:"https://xcharts-team.github.io/docs/api#uicomponent",children:"UIComponent"})]}),"\n",(0,t.jsxs)(l.blockquote,{children:["\n",(0,t.jsxs)(l.p,{children:["Since ",(0,t.jsx)(l.code,{children:"v3.13.0"})]}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"ui component of toggle. UI\u5f00\u5173\u7ec4\u4ef6\u3002"}),"\n",(0,t.jsx)(l.h3,{id:"uitoggleborderstyle",children:"UIToggle.borderStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public BorderStyle borderStyle",(0,t.jsx)(l.br,{}),"\n","The border style of toggle."]}),"\n",(0,t.jsx)(l.h3,{id:"uitoggleinteractable",children:"UIToggle.interactable"}),"\n",(0,t.jsxs)(l.p,{children:["public bool interactable",(0,t.jsx)(l.br,{}),"\n","Whether the toggle is interactable."]}),"\n",(0,t.jsx)(l.h3,{id:"uitoggleison",children:"UIToggle.isOn"}),"\n",(0,t.jsxs)(l.p,{children:["public bool isOn",(0,t.jsx)(l.br,{}),"\n","Whether the toggle is on."]}),"\n",(0,t.jsx)(l.h3,{id:"uitogglelabelstyle",children:"UIToggle.labelStyle"}),"\n",(0,t.jsxs)(l.p,{children:["public LabelStyle labelStyle",(0,t.jsx)(l.br,{}),"\n","The text style of toggle."]}),"\n",(0,t.jsx)(l.h3,{id:"uitogglemarkcolor",children:"UIToggle.markColor"}),"\n",(0,t.jsxs)(l.p,{children:["public Color32 markColor",(0,t.jsx)(l.br,{}),"\n","The color of mark."]}),"\n",(0,t.jsx)(l.h3,{id:"uitogglemarkgap",children:"UIToggle.markGap"}),"\n",(0,t.jsx)(l.p,{children:"public float markGap"}),"\n",(0,t.jsx)(l.h3,{id:"uitoggleoffcolor",children:"UIToggle.offColor"}),"\n",(0,t.jsx)(l.p,{children:"public Color32 offColor"}),"\n",(0,t.jsx)(l.h3,{id:"uitoggleoncolor",children:"UIToggle.onColor"}),"\n",(0,t.jsxs)(l.p,{children:["public Color32 onColor",(0,t.jsx)(l.br,{}),"\n","The color of toggle when it is on."]}),"\n",(0,t.jsx)(l.h3,{id:"uitoggleonvaluechanged",children:"UIToggle.onValueChanged"}),"\n",(0,t.jsxs)(l.p,{children:["public Action<bool> onValueChanged",(0,t.jsx)(l.br,{}),"\n","The callback function when the value of toggle changed."]}),"\n",(0,t.jsx)(l.h3,{id:"uitoggletext",children:"UIToggle.text"}),"\n",(0,t.jsxs)(l.p,{children:["public string text",(0,t.jsx)(l.br,{}),"\n","The text of toggle."]}),"\n",(0,t.jsx)(l.h3,{id:"uitoggleonpointerclick",children:"UIToggle.OnPointerClick"}),"\n",(0,t.jsx)(l.p,{children:"public override void OnPointerClick(PointerEventData eventData)"})]})}function h(e={}){const{wrapper:l}={...(0,r.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,l,i)=>{i.d(l,{R:()=>a,x:()=>s});var t=i(6540);const r={},n=t.createContext(r);function a(e){const l=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function s(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(n.Provider,{value:l},e.children)}}}]);